version: "3.7"

services:
    database:
        image: postgres
        container_name: database
        restart: always
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB_PROD}
        volumes:
            - pgdata:/data/postgres
        networks: 
            - production

    database_test:
        image: postgres
        container_name: database_test
        restart: always
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB_TEST}
        networks: 
            - test

    api:
        build: .
        container_name: api
        command: sh -c "dockerize -wait tcp://database:5432 -timeout 300s -wait-retry-interval 1s yarn dev"
        ports:
            - 3333:3333
        volumes: 
            - .:/usr/app
            - /usr/app/node_modules
        depends_on:
            - database
            - migrations
        networks: 
            - production

    api_test:
        build: .
        container_name: api_test
        command: sh -c "sleep 10s && yarn test"
        depends_on:
            - database_test
        networks: 
            - test

    migrations:
        build: .
        container_name: migrations
        command: sh -c "dockerize -wait tcp://database:5432 -timeout 300s -wait-retry-interval 1s yarn typeorm migration:run"
        depends_on: 
            - database
        networks: 
            - production

volumes:
    pgdata:
        driver: local

networks: 
    production:
        driver: bridge
    test:
        driver: bridge